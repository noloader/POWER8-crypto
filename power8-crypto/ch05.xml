<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="ch05">
  <indexterm>
    <primary>SHA</primary>
  </indexterm>
  <title>Secure Hash Standard</title>
  <para>SHA is the Secure Hash Standard. SHA is specified in <ulink url="https://nvlpubs.nist.gov/nistpubs/fips/nist.fips.180-4.pdf">FIPS 180-4, Secure Hash Standard (SHS)</ulink>. You should read the standard if you are not familiar with the hash family.</para>
  <indexterm>
    <primary>SHA</primary>
    <secondary>Sigma functions</secondary>
  </indexterm>
  <section id="sha_insn">
    <title>Sigma functions</title>
    <para>POWER8 provides a <systemitem>sigma</systemitem> instruction to accelrate SHA calculations. The instruction takes two integer arguments and the constants are used to select among <systemitem>Sigma0</systemitem>, <systemitem>Sigma1</systemitem>, <systemitem>sigma0</systemitem> and <systemitem>sigma1</systemitem>.</para>
  </section>
  <indexterm>
    <primary>SHA</primary>
    <secondary>Ch function</secondary>
  </indexterm>
  <section id="sha_ch">
    <title>Ch function</title>
    <para>POWER8 provides the <systemitem>vsel</systemitem> instruction and it is SHA's <systemitem>Ch</systemitem> function. The implementation for the 32x4 arrangement is shown below. The code is the same for the 64x2 arrangement, but the function takes <systemitem>uint64x2_p8</systemitem> arguments. The important piece of information is <systemitem>x</systemitem> used as the selector.</para>
    <programlisting>uint32x4_p8
VectorCh(uint32x4_p8 x, uint32x4_p8 y, uint32x4_p8 z)
{
    return vec_sel(z, y, x);
}</programlisting>
  </section>
  <indexterm>
    <primary>SHA</primary>
    <secondary>Maj function</secondary>
  </indexterm>
  <section id="sha_maj">
    <title>Maj function</title>
    <para>POWER8 provides the <systemitem>vsel</systemitem> instruction and it can be used for SHA's <systemitem>Maj</systemitem> function. The implementation for the 32x4 arrangement is shown below. The code is the same for the 64x2 arrangement, but the function takes <systemitem>uint64x2_p8</systemitem> arguments. The important piece of information is <systemitem>x^y</systemitem> used as the selector.</para>
    <programlisting>uint32x4_p8
VectorCh(uint32x4_p8 x, uint32x4_p8 y, uint32x4_p8 z)
{
    return vec_sel(y, z, vec_xor(x, y));
}</programlisting>
  </section>
  <indexterm>
    <primary>SHA</primary>
    <secondary>SHA-256</secondary>
  </indexterm>
  <section id="sha_sha256">
    <title>SHA-256</title>
    <para>TODO</para>
  </section>
  <indexterm>
    <primary>SHA</primary>
    <secondary>SHA-512</secondary>
  </indexterm>
  <section id="sha_sha512">
    <title>SHA-512</title>
    <para>TODO</para>
  </section>
</chapter>
